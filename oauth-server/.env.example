# Example environment variables for RSA key configuration
# Recommended: point to key file paths in the repo (do NOT commit real private keys)
# Optional: embed base64-encoded PEMs if you need a single-file env deployment (less secure)

# Directory where keys live (relative to project root)
KEYS_DIR=keys

# Recommended: use file paths (preferred)
PRIVATE_KEY_PATH=${KEYS_DIR}/private.pem
PUBLIC_KEY_PATH=${KEYS_DIR}/public.pem

# Optional: embed PEMs as base64 strings (use only if you understand the security implications)
# To generate these values locally run:
#   base64 -w0 keys/private.pem    # -> copy output to PRIVATE_KEY_B64
#   base64 -w0 keys/public.pem     # -> copy output to PUBLIC_KEY_B64
# Then in your app decode with Buffer.from(process.env.PRIVATE_KEY_B64, 'base64').toString('utf8')
#PRIVATE_KEY_B64=
#PUBLIC_KEY_B64=

# Example openssl commands (same as README) â€” run locally to create the files referenced above:
# mkdir -p keys
# openssl genrsa -out keys/private.pem 2048
# openssl rsa -in keys/private.pem -outform PEM -pubout -out keys/public.pem
# Environment Configuration
MONGO=mongodb://localhost:27017/oauth_demo
PORT=4000
SERVICE_NAME=oauth-oidc-demo-esm
SERVICE_VERSION=1.0.0

# Development settings
NODE_ENV=development